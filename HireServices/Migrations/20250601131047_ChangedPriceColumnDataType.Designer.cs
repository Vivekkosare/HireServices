// <auto-generated />
using System;
using System.Collections.Generic;
using HireServices.Features.ServiceProviders.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HireServices.Migrations
{
    [DbContext(typeof(ProviderDbContext))]
    [Migration("20250601131047_ChangedPriceColumnDataType")]
    partial class ChangedPriceColumnDataType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HireServices.Features.ServiceProviders.Domain.Entities.Provider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<decimal?>("AverageRating")
                        .HasColumnType("decimal");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CustomersServed")
                        .HasColumnType("int");

                    b.Property<string>("HighlightedServices")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("LatestReviews")
                        .HasColumnType("jsonb");

                    b.PrimitiveCollection<List<string>>("ServiceCategories")
                        .IsRequired()
                        .HasColumnType("TEXT[]");

                    b.PrimitiveCollection<List<string>>("ServiceTags")
                        .IsRequired()
                        .HasColumnType("TEXT[]");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ServiceCategories");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ServiceCategories"), "gin");

                    b.HasIndex("ServiceTags");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("ServiceTags"), "gin");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("HireServices.Features.ServiceProviders.Domain.Entities.ProviderService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12,2)");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("ProviderServices");
                });

            modelBuilder.Entity("HireServices.Features.ServiceProviders.Domain.Entities.Provider", b =>
                {
                    b.OwnsOne("HireServices.Common.ValueObjects.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<Guid>("ProviderId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("DateOfBirth")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("DateOfBirth");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Email");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("LastName");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("PhoneNumber");

                            b1.HasKey("ProviderId");

                            b1.ToTable("Providers");

                            b1.WithOwner()
                                .HasForeignKey("ProviderId");
                        });

                    b.Navigation("ContactInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("HireServices.Features.ServiceProviders.Domain.Entities.ProviderService", b =>
                {
                    b.HasOne("HireServices.Features.ServiceProviders.Domain.Entities.Provider", "Provider")
                        .WithMany("ProviderServices")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("HireServices.Features.ServiceProviders.Domain.Entities.Provider", b =>
                {
                    b.Navigation("ProviderServices");
                });
#pragma warning restore 612, 618
        }
    }
}
